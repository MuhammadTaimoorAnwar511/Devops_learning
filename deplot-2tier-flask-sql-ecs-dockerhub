0. Prerequisite: Push your Flask image

docker build -t taimooranwar/flaskapp:latest .
docker push taimooranwar/flaskapp:latest

Verify itâ€™s public (or your ECS task execution role has Docker Hub pull permissions).

1. Create an ECS (Fargate) Cluster
Sign in to AWS Console â†’ Services â†’ ECS.

In left sidebar, click Clusters â†’ Create cluster.

Choose Networking only (Powered by AWS Fargate) â†’ Next step.

Name it twotier-cluster â†’ Create.

2. Create the Task Execution Role
In the AWS Console search bar, type IAM â†’ open IAM service.

Left nav â†’ Roles â†’ Create role.

Under Trusted entity, select AWS service â†’ ECS â†’ ECS Task â†’ Next.

Search for AmazonECSTaskExecutionRolePolicy, check it â†’ Next.

Give it the name ecsTaskExecutionRole â†’ Create role.

3. Identify Your VPC & Subnets
Console search â†’ VPC â†’ open VPC service.

Left nav â†’ Your VPCs, note the Default VPC ID.

Left nav â†’ Subnets, filter by that VPC â†’ pick two public subnets (different AZs) and note their IDs.

4. Create a Security Group for Flask
In the VPC console â†’ left nav â†’ Security Groups â†’ Create security group.

Name: ecs-sg, VPC: your Default VPC.

Under Inbound rules, Add rule:

Type: Custom TCP

Port range: 5000

Source: Anywhere (0.0.0.0/0)

Leave outbound as All traffic â†’ Create security group.

5. Define a Fargate Task Definition
Back in ECS â†’ left nav â†’ Task Definitions â†’ Create new Task Definition.

Choose FARGATE â†’ Next.

Fill in:

Name: twotier-task

Task execution role: ecsTaskExecutionRole

Task memory: 1 GB

Task CPU: 0.5 vCPU

Network mode: awsvpc

Under Container definitions, click Add container twice:

 A. MySQL container

Container name: mysql

Image: mysql:5.7

Port mappings: Container port 3306 / TCP

Environment:

MYSQL_DATABASE = myDb

MYSQL_USER = admin

MYSQL_PASSWORD = admin

MYSQL_ROOT_PASSWORD = admin

(Optional) Health check:

Command: ["CMD-SHELL","mysqladmin ping -h localhost -uroot -padmin"]

Start period: 60s, Interval: 30s, Retries: 3, Timeout: 5s

Click Add Container.

B. Flask container

Container name: flaskapp

Image: taimooranwar/flaskapp:latest

Port mappings: Container port 5000 / TCP

Environment (override your .env for awsvpc):

MYSQL_HOST = mysql

MYSQL_PORT = 3306

MYSQL_USER = admin

MYSQL_PASSWORD = admin

MYSQL_DB = myDb

Container dependencies â†’ Add dependency:

Container: mysql

Condition: HEALTHY

Scroll down and click Create to register the new revision.

6. Launch a Fargate Service
In ECS â†’ Clusters, click on twotier-cluster.

In the Services tab â†’ Create â†’ Service.

Fill in:

Launch type: FARGATE

Task Definition: twotier-task (latest revision)

Service name: twotier-service

Number of tasks: 1

Networking:

Cluster VPC: your Default VPC

Subnets: select the two you noted earlier

Security groups: ecs-sg

Auto-assign public IP: ENABLED

Skip load balancer â†’ Next â†’ Create Service.

7. Verify & Test
In twotier-cluster â†’ Tasks tab, wait until the new task shows RUNNING.

Click the task â†’ expand Network â†’ click the ENI â†’ note its IPv4 Public IP.

On your machine:

 curl http://<Public-IP>:5000/
 You should see your Flask appâ€™s response.

ðŸŽ‰ Youâ€™ve now deployed your twoâ€‘tier Flask + MySQL stack entirely via the AWS Console (GUI).
