LoadBalancer-deplot-2tier-flask-sql-ecs-dockerhub:
===================================================================================================================================================================

1]Create SECURITY GROUP:

VPC settings:	VPC only
Name tag:	twotier-vpc
IPv4 CIDR:	10.0.0.0/20
IPv4 CIDR block:	IPv4 CIDR manual input
Tenancy:	leave default
Click Create VPC


1.1]Create 2 OR 4 SUBNETS:
 
1)
VPC ID:	twotier-vpc
Subnet name:		Public-Subnet-1
Select Availability Zone
IPv4 subnet CIDR block:	10.0.1.0/24
Click create subnet
2)
VPC ID:	twotier-vpc
Subnet name:		Public-Subnet-2
Select Availability Zone
IPv4 subnet CIDR block:	10.0.3.0/24
Click create subnet
3)
VPC ID:	twotier-vpc
Subnet name:		Private-Subnet-1
Select Availability Zone
IPv4 subnet CIDR block:	10.0.1.0/24
Click create subnet
4)
VPC ID:	twotier-vpc
Subnet name:		Private-Subnet-2
Select Availability Zone
IPv4 subnet CIDR block:	10.0.4.0/24
Click create subnet
1.3]CREATE INTERNET GATEWAY:


Name tag:	twotier-igw
Click create internet gate way
Attach igw to VPC


1.4] CREATE NAT GATEWAY


Name:		twotier-nat
Select Subnet:		Public-Subnet-1
Connectivity type:	public
Click allocate elastic ip


Click create nat gateway


1.5]CREATE ROUTES TABEL
1)

 Name:		twotier-public-rt
Select vpc:	twotier-vpc
Go to subnet association and link public subnets
Edit routes:	0.0.0.0/0 → twotier-igw


2)

 Name:		twotier-private-rt
Select vpc:	twotier-vpc
Go to subnet association and link private subnets
Edit routes:	0.0.0.0/0 → twotier-nat


1.6] CREATE SECURITY GROUP:
1)
Security group name:		alb-sg
Select vpc:	twotier-vpc
Inbound rules;		HTTP 80 from 0.0.0.0/0	
2)
Security group name:		flask-sg
Select vpc:	twotier-vpc
Inbound rules;		TCP 5000 from alb-sg
3)
Security group name:		mysql-sg
Select vpc:	twotier-vpc
Inbound rules;		MYSQL/Aurora 3306 from flask-sg

2]Create Application Load Balancer
Path: EC2 → Load Balancers → Create
Load balancer name:		twotier-alb
Scheme: Select internet facing
Load balancer IP address type: select IPV4
Network mapping:		Select vpc:	twotier-vpc
Select Availability Zones and public subnets
Select alb-sg security group
Listener HTTP :80 (default)
Click create target group
Select ip address bcz working on ecs 
Name:		twotier-flask-tg
Protocol / Port: HTTP : 5000
Click create 
Remove Step 2: Specify IPs and define ports
Go to load balancer lisner and select twotier-flask-tg
Click create load balancer
3]Create ECS  Task->Cluster->Services
3.1] CREATE SQL TASK DEFINATION 
Task definition family:		twotier_task_sql
Launch Type AWS Fargate
Select Task Size
select Task execution role
Container name:	mysql
Image:		mysql:5.7
Port Maping:
Container port:3306 -> TCP ->HTTP
SET Resource allocation limits
ENV:
MYSQL_DATABASE=myDb, MYSQL_USER=admin, MYSQL_PASSWORD=admin, MYSQL_ROOT_PASSWORD=admin
Check:Log collection
3.2] CREATE CLUSTER
Name:		twotier_cluster
Go inside cluster you created 
3.3]CREATE SQL SERVICE 
Task definition family:		twotier_task_sql
Compute options select Launch Type
Select replica and enter desire tasks
Networking select twotier-vpc and subnets(private 1 or 2) and mysql-sg
Turn of public ip
Click create 
3.3] CREATE FLASK TASK DEFINATION 
Task definition family:		twotier_task_flask
Launch Type AWS Fargate
Select Task Size
select Task execution role
Container name:	flaskapp
Image:		taimooranwar/flaskapp:latest
Port Maping:
Container port:5000 -> TCP ->HTTP
SET Resource allocation limits
ENV:
MYSQL_HOST=<Private IP of SQL task>MYSQL_USER=adminMYSQL_PASSWORD=adminMYSQL_DB=myDb
Check:Log collection
HealthCheck Command: `CMD-SHELL, curl -f http://localhost:5000/health 
Start-period: 60 s & Interval: 30 s & Timeout: 5 s
Go to Cluster 
3.4]CREATE FLASK SERVICE
Task definition family:		twotier_task_flask
Compute options select Launch Type
Select replica and enter desire tasks
Networking select twotier-vpc and subnets(public 1 or 2) and flaskl-sg
Turn on public ip
Tick Use load balancing
Select Load balancer: twotier-alb
Select  listener
Select Target group: twotier-flask-tg
Click create 
===================================================================================================================================================================
HOW TO DELETE SETUP 
1] GO TO TASK DEFINITION ECS
Actions->de Register Task
Filter by inactive and delete
Go to Cluster and delete it and it will delete services also 
2]GO TO ECS 
Delete load balancer
Delete target group
3] GO TO VPC
Delete nat gateway
Go to routes table and delist subnet association
Go to VPC and delete vpc 
Release elastic ip
